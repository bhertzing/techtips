<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Powershell on Bill&#39;s Tech Tips</title>
    <link>http://techtips.billhertzing.com/tags/powershell/</link>
    <description>Recent content in Powershell on Bill&#39;s Tech Tips</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Bill Hertzing 2021.</copyright>
    <lastBuildDate>Mon, 19 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://techtips.billhertzing.com/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create or Change PowerShell Execution Policy</title>
      <link>http://techtips.billhertzing.com/post/powershell_execution_policy/</link>
      <pubDate>Mon, 19 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/powershell_execution_policy/</guid>
      <description>Many times you will need to set this execution policy to run Powershell scripts
set-executionpolicy -scope CurrentUser Unrestricted </description>
    </item>
    
    <item>
      <title>Get Environment Variables - Windows</title>
      <link>http://techtips.billhertzing.com/post/get-environment-variables-windows/</link>
      <pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/get-environment-variables-windows/</guid>
      <description>This Powershell command will print out a list of environment variables in the system.
Get-ChildItem Env: </description>
    </item>
    
    <item>
      <title>Watch a site using Powershell</title>
      <link>http://techtips.billhertzing.com/post/watch-a-site-using-powershell/</link>
      <pubDate>Thu, 15 Dec 2016 10:47:21 -0600</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/watch-a-site-using-powershell/</guid>
      <description>Introduction: A quick script to watch a website to see if it remains online. Checks every five seconds. This is different than doing a simple ping check as it actually takes a look at the site and returns a status code. This is especially useful if you want to make sure a site is up during a critical event.
 while ($true -eq $true) {curl DOMAIN_NAME.COM | findstr &#34;RawContent&#34;; sleep 5} Or</description>
    </item>
    
  </channel>
</rss>