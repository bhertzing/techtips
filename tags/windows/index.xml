<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on Bill&#39;s Tech Tips</title>
    <link>http://techtips.billhertzing.com/tags/windows/</link>
    <description>Recent content in Windows on Bill&#39;s Tech Tips</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Bill Hertzing 2021.</copyright>
    <lastBuildDate>Mon, 28 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://techtips.billhertzing.com/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Taskwarrior Lesson 10: Context</title>
      <link>http://techtips.billhertzing.com/post/taskwarrior_lesson_10/</link>
      <pubDate>Mon, 28 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/taskwarrior_lesson_10/</guid>
      <description>New Commands Here is the full command we will be using in this lesson.  $ task context define [name] [tag] $ task context [name] $ task context none</description>
    </item>
    
    <item>
      <title>Taskwarrior Lesson 09: Reports and UDAs</title>
      <link>http://techtips.billhertzing.com/post/taskwarrior_lesson_09/</link>
      <pubDate>Mon, 14 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/taskwarrior_lesson_09/</guid>
      <description>New Commands No new commands in this Lesson. We combine what was covered in previous lessons.</description>
    </item>
    
    <item>
      <title>Taskwarrior Lesson 08: User Defined Attributes</title>
      <link>http://techtips.billhertzing.com/post/taskwarrior_lesson_08/</link>
      <pubDate>Mon, 07 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/taskwarrior_lesson_08/</guid>
      <description>New Commands Here is the full command we will be using in this lesson.  $ task config uda.cost.type numeric $ task config uda.cost.label Cost urgency.uda.cost.coefficient=30 uda.color.type=string uda.color.label=Color uda.color.values=red,white,blue,green,yellow</description>
    </item>
    
    <item>
      <title>Taskwarrior Lesson 07: Reports</title>
      <link>http://techtips.billhertzing.com/post/taskwarrior_lesson_07/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/taskwarrior_lesson_07/</guid>
      <description>New Commands Here is the full command we will be using in this lesson.  task report task show list task config report.list.labels</description>
    </item>
    
    <item>
      <title>Taskwarrior Lesson 06: Command Stacking</title>
      <link>http://techtips.billhertzing.com/post/taskwarrior_lesson_06/</link>
      <pubDate>Sun, 23 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/taskwarrior_lesson_06/</guid>
      <description>New Commands Here is the full command we will be using in this lesson.  newcakefunction () { task add Bake cake for $1 due:$2 scheduled:due-4d wait:due-5d project:$3 task add buy eggs +$1,grocery due:$2 scheduled:due-1d wait:-2d project:$3 task add buy flour +$1,grocery due:$2 scheduled:due-1d wait:-2d project:$3 task add buy milk +$1,grocery due:$2 scheduled:due-1d wait:-2d project:$3 } alias newcake=newcakefunction</description>
    </item>
    
    <item>
      <title>Taskwarrior Lesson 05: Taskwarrior and Bash</title>
      <link>http://techtips.billhertzing.com/post/taskwarrior_lesson_05/</link>
      <pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/taskwarrior_lesson_05/</guid>
      <description>New Commands Configurations to the .bashrc file alias nt=&amp;ldquo;task add $1&amp;rdquo; $1 is an argument that you can send to command and it will process it where it is located.
alias tl=&#34;task list&#34; alias reload=&#34;source .bashrc&#34; alias nt=&#34;task add $1&#34; taskprojectfunction () { task $1 modify project:$2 } alias tproj=taskprojectfunction  UPDATE: Monday, July 10, 2017 04:12 pm - I was absolutely wrong about this. Although Taskwarrior took the command it is not stored correctly.</description>
    </item>
    
    <item>
      <title>Taskwarrior Lesson 04: Miscellaneous Commands and Tags</title>
      <link>http://techtips.billhertzing.com/post/taskwarrior_lesson_04/</link>
      <pubDate>Fri, 07 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/taskwarrior_lesson_04/</guid>
      <description>New Commands $ task calc $ task calendar $ task export $ task {task id} append {text} $ task undo $ task {task id} prepend {text} $ task project $ task log $ task completed $ task {uuid} $ task timesheet $ task ghistory $ task history $ task burndown.daily $ task burindown.weekly $ task show $ task active $ task {task id} start $ task colors $ task {task id} duplicate $ task {task id} modify tag:{tag} {tag} Any single word to tag a task.</description>
    </item>
    
    <item>
      <title>Taskwarrior Lesson 03: Linking Tasks and Setting Projects</title>
      <link>http://techtips.billhertzing.com/post/taskwarrior_lesson_03/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/taskwarrior_lesson_03/</guid>
      <description>New Commands $ task {task id} modify priority:{priority level} {priority level} By default usually L, M, &amp;amp; H for low, medium and high.
$ task {task id} modify depends:{other task id} {other task id} The task id where one task depends on another.
$ task {task id} modify project:{project name} {project name} The name of the project other tasks belong to.</description>
    </item>
    
    <item>
      <title>Taskwarrior Lesson 02: Configuration and Edit Tasks</title>
      <link>http://techtips.billhertzing.com/post/taskwarrior_lesson_02/</link>
      <pubDate>Wed, 05 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/taskwarrior_lesson_02/</guid>
      <description>New Commands $ task {task id} edit Line to add to the .bashrc file
export EDITOR=&#34;nano&#34; $ task {task id} annotate {additional information} {additional information} This is any text to add to the task.</description>
    </item>
    
    <item>
      <title>Taskwarrior Lesson 01: Installation and First Task</title>
      <link>http://techtips.billhertzing.com/post/taskwarrior_lesson_01/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/taskwarrior_lesson_01/</guid>
      <description>Taskwarrior Download https://taskwarrior.org/ Cygwin Download https://www.cygwin.com/  New Commands $ task $ task add {action item} {action item} Any item that will be a task.
$ task list $ task {task id} delete {task id} The current ID for that task.</description>
    </item>
    
    <item>
      <title>Create or Change PowerShell Execution Policy</title>
      <link>http://techtips.billhertzing.com/post/powershell_execution_policy/</link>
      <pubDate>Mon, 19 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/powershell_execution_policy/</guid>
      <description>Many times you will need to set this execution policy to run Powershell scripts
set-executionpolicy -scope CurrentUser Unrestricted </description>
    </item>
    
    <item>
      <title>Windows Event Log Forensics</title>
      <link>http://techtips.billhertzing.com/post/windows_event_log_forensics/</link>
      <pubDate>Mon, 19 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/windows_event_log_forensics/</guid>
      <description>In the time of incidents, Windows Event logs provide a plenty of useful information for the Incident responder.As you know Windows can generate thousands of events in few minutes ,in this diary I will talk about some of the most useful events and in the next diary I would discuss how to use PowerShell to search for them .
Here is of the most useful events for Forensics/Incident response:
Event ID</description>
    </item>
    
    <item>
      <title>Get Environment Variables - Windows</title>
      <link>http://techtips.billhertzing.com/post/get-environment-variables-windows/</link>
      <pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techtips.billhertzing.com/post/get-environment-variables-windows/</guid>
      <description>This Powershell command will print out a list of environment variables in the system.
Get-ChildItem Env: </description>
    </item>
    
  </channel>
</rss>